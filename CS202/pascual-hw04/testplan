ALU
    set operand 0 to 111
    set operand 1 to 1001
    set operand to 0100 (sum)
    verify that result is 10000

    set operand 0 to 10000
    set operand 1 to 1001
    set operand to 0010 (op0-op1)
    verify that result is 111

    set operand 0 to 1
    set operand 1 to 11
    set operand to 0011 (op1-op0)
    verify that result is 10

    set operand 0 to 11101
    set operand 1 to 1001001
    set operand to 1101 (operand1)
    verify that result is 1001001

    set operand 0 to 110
    set operand 1 to 101
    set operand to 0001 (XOR)
    verify that result is 011

    set operand 0 to 1010
    set operand 1 to 0011
    set operand to 0000 (AND)
    verify that result is 10

    set operand 0 to 10010
    set operand 1 to 11111
    set operand to 1100 (OR)
    verify that result is 11111

    set operand 0 to 111111
    set operand 1 to 10101
    set operand to 1111 (not op1)
    verify that result is 11111111111111111111111111101010

Register File
    set Rd to 011
    set Rd val to 10101
    toggle clock 0 to 1
    set Rn to 011
    verify Rn val us 10101
    set Rm to 011
    verify Rm val us 10101

    set Rd to 110
    set Rd val to 11100010101
    toggle clock 0 to 1
    set Rn to 110
    verify Rn val us 11100010101
    set Rm to 110
    verify Rm val us 11100010101

    set Rd to 010
    set Rd val to 100000101
    toggle clock 0 to 1
    set Rn to 010
    verify Rn val us 100000101
    set Rm to 010
    verify Rm val us 100000101

Condition code register
  Testing N
    set operand to 10000000000000000000000000000000
    toggle Id.cc
    verify that N is 1

    set operand to 1
    toggle Id.cc
    verify that N is 0

  Testing Z
    set operand to 0
    toggle Id.cc
    verify that Z is 1

    set operand to 11
    toggle Id.cc
    verify that Z is 0

  Testing P
    set operand to 10000000000000000000000000000000
    toggle Id.cc
    verify that P is 0

    set operand to 11
    toggle Id.cc
    verify that P is 1
